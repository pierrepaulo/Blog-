Resources:
- Post:
-- id int
-- slug 
-- status enum PUBLISHED | DRAFT @default(DRAFT)
-- title
-- body
-- createdAt @default(now())
-- updatedAt?
-- cover
-- authorId
-- tags

- User:
-- id int
-- status boolean @default(true)
-- name
-- email @unique
-- password

Endpoints

- GET /posts (Listagem dos posts, com paginação)
-- Requisição:
--- Querystring: ?page=4
-- Resposta:
{
    posts: [
        { id, title, createdAt, cover, authorName, tags, slug }
    ],
    page: 1
}

- GET /posts/:slug (Um post específico)
-- Resposta:
{
    post: { id, title, createdAt, cover, authorName, tags, body, slug }
}

- GET /posts/:slug/related (Posts relacionados = tags similares)
-- Resposta:
{
    posts: [
        { id, title, createdAt, cover, authorName, tags, slug }
    ]
}

- POST /auth/signup (Cadastro)
-- Requisição:
--- Body: { name, email, password }
-- Resposta: 201
{
    user: { id, name, email }
    token: 'abc'
}

- POST /auth/signin (Login)
-- Requisição:
--- Body: { email, password }
-- Resposta:
{
    user: { id, name, email },
    token: 'abc'
}

- POST /auth/validate (Validar JWT)
-- Requisição:
--- Header Authorization: Bearer abc
-- Resposta:
{
    user: { id, name, email }
}

- GET /admin/posts (Pegar posts, incluindo drafts, com paginação)
-- Requisição:
--- Header Authorization: Bearer abc
--- Querystring: ?page=4
-- Resposta:
{
    posts: [
        { id, status, title, createdAt, cover, authorName, tags, slug }
    ],
    page: 1
}

- GET /admin/posts/:slug (Pegar um post)
-- Requisição:
--- Header Authorization: Bearer abc
-- Resposta:
{
    post: { id, title, createdAt, cover, authorName, tags, body, slug}
}

- POST /admin/posts (Inserir um novo post)
-- Requisição:
--- FormData multipart/form-data
--- Header Authorization: Bearer abc
--- Body: { status, title, tags, body, cover: FILE }
-- Resposta: 201
{
    post: { id, status, title, createdAt, cover, authorName, tags, slug }
}

- PUT /admin/posts/:slug (Editar um post)
-- Requisição:
--- FormData multipart/form-data
--- Header Authorization: Bearer abc
--- Body: { status, title, tags, body, cover: FILE }
-- Resposta:
{
    post: { id, status, title, createdAt, cover, authorName, tags, slug }
}

- DELETE /admin/posts/:slug (Deletar um post)
-- Requisição:
--- Header Authorization: Bearer abc
-- Resposta:
{
    error: null
}